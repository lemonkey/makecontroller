/********************************************************************************* Copyright 2006 MakingThings Licensed under the Apache License,  Version 2.0 (the "License"); you may not use this file except in compliance  with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. *********************************************************************************/import com.makingthings.makecontroller.OscMessage;/** 	An OscBundle is a collection of multiple OscMessages.	Use an OscBundle to send a group of OscMessages at once - very handy for reducing traffic.*/class com.makingthings.makecontroller.OscBundle{	private var oscMessages:Array;	/**  * Constructor - can be initialized with an Array of OscMessages, or a single OscMessage. 	*/	function OscBundle( messages )	{		oscMessages = new Array( );		if( messages == undefined )			return;				if( messages instanceof Array )			this.oscMessages = messages;					if( messages instanceof OscMessage )			oscMessages[0] = messages;	}		/**	Add an OscMessage to the bundle.	The given argument is added to the array of OscMessages	*/	public function addMessage( oscM:OscMessage )	{		if( oscM != undefined )			this.oscMessages.push( oscM );	}		/**	Remove an OscMessage from the bundle.	\param index The index of the OscMessage to remove	*/	public function removeMessage( index:Number )	{		if( index > 0 && index < this.oscMessages.length )			oscMessages.splice( index, 1 );	}		/**	Remove the last OscMessage from the bundle.	*/	public function removeLastMessage( )	{		if( oscMessages.length )			oscMessages.splice( -1, 1 );	}		/**	Get the number of OscMessages in an OscBundle.	/return A number specifying how many OscMessages are included in the OscBundle.	*/	public function numberOfMessages( ):Number	{		return this.oscMessages.length;	}		/**	Return an Array filled with the OscMessages in an OscBundle.	/return An Array of OscMessages.	*/	public function toMessages( ):Array	{		return this.oscMessages;	}		/**	Reset and clear out an OscBundle for reuse.	*/	public function clear( )	{		for( var i = 0; i < this.oscMessages.length; i++ )			this.oscMessages.pop();	}}